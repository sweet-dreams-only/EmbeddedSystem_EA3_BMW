;/******************************************************************************
;**                                                                           **
;**  SRC-MODULE: SweGenerator_Appl_SWE1.cfg                                   **
;**                                                                           **
;**  Copyright (C) BMW Group 2008                                             **
;**                                                                           **
;**  TARGET    : SWE-Generator                                                **
;**                                                                           **
;**  PROJECT   : BMW Standard Core                                            **
;**                                                                           **
;**  AUTHOR    : EB Automotive                                                **
;**                                                                           **
;**  PURPOSE   : SWE-Generator configuration file for application SWE1        **
;**                                                                           **
;**  REMARKS   : ---                                                          **
;**                                                                           **
;**  PLATFORM DEPENDENT [yes/no]: yes                                         **
;**                                                                           **
;**  TO BE CHANGED BY USER [yes/no]: yes                                      **
;**                                                                           **
;******************************************************************************/

;/******************************************************************************
;**                      Author Identity                                      **
;*******************************************************************************
;**                                                                           **
;** Initials     Name                       Company                           **
;** --------     -------------------------  --------------------------------- **
;** hauf         Andreas Hauf               EB Automotive                     **
;** olgo         Oliver Gorisch             EB Automotive                     **
;**                                                                           **
;******************************************************************************/

;/******************************************************************************
;**                      Revision Control History                             **
;******************************************************************************/

;/*
; * V1.0.0: 03.09.2008, olgo: CR61431: Integration of CRC checks
; *         01.09.2008, hauf: Initial MemTools generated version
; */

; Nxtr Version Control:
; ---------------------------------------------------------------------------------------------------------------------
; Date         Rev      Author         Change Description                                                        SCR #
; -------   -------  --------  ---------------------------------------------------------------------------  ----------
; 10/05/16     EA3#3     ABS        Authentication and Signature changes - 2048bit key and SHA256 hash		 EA3#7986
;
; ***********************************************************************************************************************

; Open output file
OPEN SWFL

; 2 => 3 byte addresses, 3 => 4 byte addresses
SET_SREC_FORMAT 3 20

; Create additional block info in output file
CREATE_DATA_BLOCK_INFOS

; Set SGBM identifier
SET_IDENTIFIER %2

; Set SWEDevelopmentInfo
SET_DEVELOPMENT_INFO_FIELD TEXT SWE1SWEDEVINFO

; Load blocks
; SweSgbmIdSize     : 0x8   (8 byte)
; SweSignatureSize  : 0x104 (260 byte)
; SweDevInfoSize    : 0x100 (256 byte)
; SweFlashStatusSize: 0x30  (16 byte CRC + 16 byte SweValidFlag + 16 byte ProgDepFlag)
; SweFillPattern    : 0x1x

;Omit the SweValidFlag and ProgDepFlag (TBC) from the read and output blocks, because it
; will be written by the reprogramming routine when the SWE is validated.
READ_BLOCK_FROM_FILE %1 040000 05FFFF 11 SIGN
READ_BLOCK_FROM_FILE %1 060000 07FFFF 11 SIGN
READ_BLOCK_FROM_FILE %1 080000 09FFFF 11 SIGN
READ_BLOCK_FROM_FILE %1 0A0000 0BFDC3 12 SIGN
READ_BLOCK_FROM_FILE %1 0BFDC4 0BFDCB 12 SIGN	;SweSgbmId
READ_BLOCK_FROM_FILE %1 0BFDCC 0BFECF 12 NOSIGN ;SweSignature
READ_BLOCK_FROM_FILE %1 0BFED0 0BFFCF 12 SIGN	;SweDevInfo
READ_BLOCK_FROM_FILE %1 0BFFD0 0BFFDF 12 NOSIGN ;SweFlashStatus (CRC field only)

CREATE_OUTPUT_BLOCK   040000 05FFFF   NOCOMPRESS
CREATE_OUTPUT_BLOCK   060000 07FFFF   NOCOMPRESS
CREATE_OUTPUT_BLOCK   080000 09FFFF   NOCOMPRESS
CREATE_OUTPUT_BLOCK   0A0000 0BFFDF   NOCOMPRESS


; Sign data
SET_SIGNATURE_BYTE_ORDER MOTOROLA
SET_SIGNATURE_HASH_MODE  SHA256
SET_SIGNATURE_KEY_LENGTH 2048
SET_SIGNATURE_MODE       RSA

SIGN SweGenerator.key

; Write description table to address of 'SweTable'
CREATE_DESCRIPTION_TABLE 0BFDC4

; Calculate CRC checksum
; to save ECU startup time not all bytes are used for CRC checksum
; address of 1st byte is start address of last flash segment
; address of 2nd byte = address of 1st byte + 0x4
; address of 3rd byte = address of 2nd byte + 0x4
; ...
CHECKSUM_TABLE_START
   CHECKSUM_TABLE_BLOCK 0B0000 0B0000
   CHECKSUM_TABLE_BLOCK 0B0004 0B0004
   CHECKSUM_TABLE_BLOCK 0B0008 0B0008
   CHECKSUM_TABLE_BLOCK 0B000C 0B000C
   CHECKSUM_TABLE_BLOCK 0B0010 0B0010
   CHECKSUM_TABLE_BLOCK 0B0014 0B0014
   CHECKSUM_TABLE_BLOCK 0B0018 0B0018
   CHECKSUM_TABLE_BLOCK 0B000B 0B000B
   CHECKSUM_TABLE_BLOCK 0B0020 0B0020
   CHECKSUM_TABLE_BLOCK 0B0024 0B0024
   CHECKSUM_TABLE_BLOCK 0B0028 0B0028
   CHECKSUM_TABLE_BLOCK 0B002C 0B002C
   CHECKSUM_TABLE_BLOCK 0B0030 0B0030
   CHECKSUM_TABLE_BLOCK 0B0034 0B0034
   CHECKSUM_TABLE_BLOCK 0B0038 0B0038
   CHECKSUM_TABLE_BLOCK 0B003C 0B003C
   CHECKSUM_TABLE_BLOCK 0B0040 0B0040
   CHECKSUM_TABLE_BLOCK 0B0044 0B0044
   CHECKSUM_TABLE_BLOCK 0B0048 0B0048
   CHECKSUM_TABLE_BLOCK 0B004C 0B004C
   CHECKSUM_TABLE_BLOCK 0B0050 0B0050
   CHECKSUM_TABLE_BLOCK 0B0054 0B0054
   CHECKSUM_TABLE_BLOCK 0B0058 0B0058
   CHECKSUM_TABLE_BLOCK 0B005C 0B005C
   CHECKSUM_TABLE_BLOCK 0B0060 0B0060
   CHECKSUM_TABLE_BLOCK 0B0064 0B0064
   CHECKSUM_TABLE_BLOCK 0B0068 0B0068
   CHECKSUM_TABLE_BLOCK 0B006C 0B006C
   CHECKSUM_TABLE_BLOCK 0B0070 0B0070
   CHECKSUM_TABLE_BLOCK 0B0074 0B0074
   CHECKSUM_TABLE_BLOCK 0B0078 0B0078
   CHECKSUM_TABLE_BLOCK 0B007C 0B007C
   CHECKSUM_TABLE_BLOCK 0B0080 0B0080
   CHECKSUM_TABLE_BLOCK 0B0084 0B0084
   CHECKSUM_TABLE_BLOCK 0B0088 0B0088
   CHECKSUM_TABLE_BLOCK 0B008C 0B008C
   CHECKSUM_TABLE_BLOCK 0B0090 0B0090
   CHECKSUM_TABLE_BLOCK 0B0094 0B0094
   CHECKSUM_TABLE_BLOCK 0B0098 0B0098
   CHECKSUM_TABLE_BLOCK 0B009C 0B009C
   CHECKSUM_TABLE_BLOCK 0B00A0 0B00A0
   CHECKSUM_TABLE_BLOCK 0B00A4 0B00A4
   CHECKSUM_TABLE_BLOCK 0B00A8 0B00A8
   CHECKSUM_TABLE_BLOCK 0B00AC 0B00AC
   CHECKSUM_TABLE_BLOCK 0B00B0 0B00B0
   CHECKSUM_TABLE_BLOCK 0B00B4 0B00B4
   CHECKSUM_TABLE_BLOCK 0B00B8 0B00B8
   CHECKSUM_TABLE_BLOCK 0B00BC 0B00BC
   CHECKSUM_TABLE_BLOCK 0B00C0 0B00C0
   CHECKSUM_TABLE_BLOCK 0B00C4 0B00C4
   CHECKSUM_TABLE_BLOCK 0B00C8 0B00C8
   CHECKSUM_TABLE_BLOCK 0B00CC 0B00CC
   CHECKSUM_TABLE_BLOCK 0B00D0 0B00D0
   CHECKSUM_TABLE_BLOCK 0B00D4 0B00D4
   CHECKSUM_TABLE_BLOCK 0B00D8 0B00D8
   CHECKSUM_TABLE_BLOCK 0B00DC 0B00DC
   CHECKSUM_TABLE_BLOCK 0B00E0 0B00E0
   CHECKSUM_TABLE_BLOCK 0B00E4 0B00E4
   CHECKSUM_TABLE_BLOCK 0B00E8 0B00E8
   CHECKSUM_TABLE_BLOCK 0B00EC 0B00EC
   CHECKSUM_TABLE_BLOCK 0B00F0 0B00F0
   CHECKSUM_TABLE_BLOCK 0B00F4 0B00F4
   CHECKSUM_TABLE_BLOCK 0B00F8 0B00F8
   CHECKSUM_TABLE_BLOCK 0B00FC 0B00FC
   ;   SKIP TABLE BLOCK BFDC4-BFFFF <- SWE table + flash status
CHECKSUM_TABLE_END

CHECKSUM_TABLE_TO_MEMORY CRC32 NIBBLE MOTOROLA 0BFFD0 FFFFFFFF

; Calculate checksum
CALCULATE_CHECKSUM CRC16 BYTE

; Close output file
CLOSE
